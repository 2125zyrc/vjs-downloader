function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[r] = t, e;
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r);
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}

function vjsDownloader(options) {
  var _this = this;
  //默认配置
  var defaultOptions = {
    beforeElement: "fullscreenToggle",
    controlText: "Download",
    // name: "downloadButton",
    downloadURL: null,
    customDownload: false,
    className: 'vjs-downloader'
  };
  var _options = _objectSpread2(_objectSpread2({}, defaultOptions), options);
  var _videojs = (_options === null || _options === void 0 ? void 0 : _options.videojs) || window.videojs;
  if (typeof _videojs === "undefined") {
    console.warn("vjsDownloader: video.js not detected");
    return;
  }
  var _player = this.player();
  _player.addClass(_options.className);
  _player.ready(function () {
    var _player$controlBar$ge;
    var Button = _videojs.getComponent("Button");
    var button = new Button(_player, {
      className: _options.className,
      controlText: _options.controlText,
      clickHandler: _this.handleClick
    });
    if (options !== null && options !== void 0 && options.beforeElement && (_player$controlBar$ge = _player.controlBar.getChild(_options.beforeElement)) !== null && _player$controlBar$ge !== void 0 && _player$controlBar$ge.el()) {
      _player.getChild("ControlBar").el().insertBefore(button.el(), _player.controlBar.getChild(_options.beforeElement).el());
    } else {
      _player.getChild("ControlBar").el().appendChild(button.el());
    }
  });
  this.handleClick = function () {
    if (!_options.customDownload) {
      var url = _options.downloadURL || _player.currentSource().src;
      window.open(url, "Download");
    }
    _player.trigger("download");
  };
}

export { vjsDownloader as default };
